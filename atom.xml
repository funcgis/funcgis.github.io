<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>法克鸡丝</title>
  
  <subtitle>用代码改变世界</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.xfunsoft.xyz/"/>
  <updated>2018-06-11T03:23:34.534Z</updated>
  <id>http://www.xfunsoft.xyz/</id>
  
  <author>
    <name>funcgis</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>无后台最短路径分析实现</title>
    <link href="http://www.xfunsoft.xyz/2018/01/10/route-analysis/"/>
    <id>http://www.xfunsoft.xyz/2018/01/10/route-analysis/</id>
    <published>2018-01-10T01:49:16.000Z</published>
    <updated>2018-06-11T03:23:34.534Z</updated>
    
    <content type="html"><![CDATA[<h2 id="相关知识"><a href="#相关知识" class="headerlink" title="相关知识"></a>相关知识</h2><p>​    LBS不仅需要能确定目标的地理位置，还需要能实现对地理环境的有效分析。网络分析是地理环境分析中的一个重要技术，包括最短路径分析、网络流分析等内容。在网络分析中，最短路径分析是最基本的，也是最关键的技术，一直是计算机科学、运筹学、交通工程学、地理信息学等学科的一个研究热点。</p><p>​    路径分析是<a href="https://baike.baidu.com/item/GIS/31541" target="_blank" rel="noopener">GIS</a>中最基本的功能，其核心是对最佳路径和最短路径的求解。路径分析包含了两个基本内容：一个是路径的搜索；另一个是距离的计算。路径搜索的算法与连通分析是一致的，通过邻接关系的传递来实现路径搜索。路径的长度(距离)以积聚距离(accumulated distance)来计算。距离的计算方法为：将栅格路径视做由一系列路径段(path segments)组成，在进行路径搜索的同时计算每个路径段的长度并累计起来，表示从起点到当前栅格单元的距离。这里路径段指的是在一定的精度范围内可以以直线段模拟和计算的栅格单元集合。</p><h2 id="技术路线"><a href="#技术路线" class="headerlink" title="技术路线"></a>技术路线</h2><p>​    本次要讲的无后台路径分析是指：仅适用空间数据库和WebGIS服务软件，再结合分析结果前端展示WebGIS客户端技术，实现路径数据的处理、存储、最短路径分析以及前端路网及最短路径分析结果展现。</p><p>​    这里空间数据库使用PostgreSQL+PostGIS+pgRouting，WebGIS服务软件使用Geoserver，前端展示WebGIS库使用OpenLayers3。</p><p><img src="https://github.com/funcgis/funcgis.github.io/blob/master/2018/01/10/route-analysis/PostgreSQL.png?raw=true" alt="PostgreSQL"></p><p>PostgreSQL 是一个自由的对象-关系数据库服务器(数据库管理系统)。是世界上可以获得的最先进的开放源码的数据库系统，它提供了多版本并行控制，支持几乎所有 SQL 构件(包括子查询，事务和用户定 义类型和函数)，例如复杂SQL查询，SQL子选择，外键，触发器，视图，事务，多进程并发控制(MVCC)，流式复制(9.0)，热备(9.0))等。 并且可以获得非常广阔范围的(开发)语言绑定 (包括 C，C++，Java，perl，tcl，和 python)。PostgreSQL可在所有主要操作系统(即Linux，UNIX(AIX，BSD，HP-UX，SGI IRIX，Mac OS X，Solaris，Tru64)和Windows等)上运行。</p><p><img src="https://github.com/funcgis/funcgis.github.io/blob/master/2018/01/10/route-analysis/PostGIS.png?raw=true" alt="PostGIS"></p><p>尽管在PostgreSQL提供了上述几项支持空间数据的特性，但其提供的空间特性很难达到GIS的要求，主要表现在:缺乏复杂的空间类型;没有提供空间分析;没有提供投影变换功能。为了使得PostgreSQL更好的提供空间信息服务，PostGIS应运而生。构建在其上的空间对象扩展模块PostGIS则使得其成为一个真正的大型<a href="https://baike.baidu.com/item/%E7%A9%BA%E9%97%B4%E6%95%B0%E6%8D%AE%E5%BA%93" target="_blank" rel="noopener">空间数据库</a>。PostGIS在对象关系型数据库PostgreSQL上增加了存储管理<a href="https://baike.baidu.com/item/%E7%A9%BA%E9%97%B4%E6%95%B0%E6%8D%AE" target="_blank" rel="noopener">空间数据</a>的能力，相当于Oracle的spatial部分。PostGIS最大的特点是符合并且实现了几乎全部OpenGIS的规范，提供了空间对象、<a href="http://www.baike.com/sowiki/%E7%A9%BA%E9%97%B4%E7%B4%A2%E5%BC%95?prd=content_doc_search" target="_blank" rel="noopener">空间索引</a>、空间操作函数和空间操作符等几乎所有商业数据库所具备的的空间数据库属性，PostGIS已经成为最著名的开源GIS数据库插件。</p><p><img src="https://github.com/funcgis/funcgis.github.io/blob/master/2018/01/10/route-analysis/pgRouting.png?raw=true" alt="pgRouting"></p><p>PgRouting是基于开源空间数据库PostGIS用于网络分析的扩展模块，最初它被称作pgDijkstra，因为它只是利用Dijkstra算法实现最短路径搜索，之后慢慢添加了其他的路径分析算法，如A算法，双向A算法，Dijkstra算法，双向Dijkstra算法，tsp算法等，然后被更名为pgRouting。该扩展库依托PostGIS自身的GIS索引，丰富的坐标系与图形类型，强大的几何处理能力，如空间查询，空间处理，线性参考等优势，能保障在较大数据级别下的网络分析效果更快更好。</p><p><img src="https://github.com/funcgis/funcgis.github.io/blob/master/2018/01/10/route-analysis/GeoServer.png?raw=true" alt="GeoServer"></p><p>GeoServer 是 OpenGIS Web 服务器规范的 J2EE 实现，利用 GeoServer 可以方便的发布地图数据，允许用户对特征数据进行更新、删除、插入操作，通过 GeoServer 可以比较容易的在用户之间迅速共享空间地理信息。Geoserver是著名的开源GIS软件之一。也是项目中常用的地图服务软件。兼容 WMS 和 WFS 特性；支持 PostgreSQL、 Shapefile 、 ArcSDE 、 Oracle 、 <a href="https://baike.baidu.com/item/VPF" target="_blank" rel="noopener">VPF</a> 、 MySQL 、 MapInfo ；支持上百种投影；能够将网络地图输出为 jpeg 、 gif 、 png 、 SVG 、 KML 等格式；能够运行在任何基于 J2EE/Servlet 容器之上；嵌入 MapBuilder 支持 AJAX 的地图客户端OpenLayers；除此之外还包括许多其他的特性。</p><p><img src="https://github.com/funcgis/funcgis.github.io/blob/master/2018/01/10/route-analysis/OpenLayers.png?raw=true" alt="OpenLayers 3"></p><p>OpenLayers是一个用于开发WebGIS客户端的JavaScript包。OpenLayers 支持的地图来源包括Google Maps、Yahoo、 Map、微软Virtual Earth 等，用户还可以用简单的图片地图作为背景图，与其他的图层在OpenLayers 中进行叠加，在这一方面OpenLayers提供了非常多的选择。除此之外，OpenLayers实现访问地理空间数据的方法都符合行业标准。OpenLayers 支持Open GIS 协会制定的WMS（Web Mapping Service）和WFS（Web Feature Service）等网络服务规范，可以通过<a href="https://baike.baidu.com/item/%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1" target="_blank" rel="noopener">远程服务</a>的方式，将以OGC 服务形式发布的地图数据加载到基于浏览器的OpenLayers 客户端中进行显示。OpenLayers采用<a href="https://baike.baidu.com/item/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1" target="_blank" rel="noopener">面向对象</a>方式开发，并使用来自Prototype.js和Rico中的一些组件。</p><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><h3 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h3><p>​    本文不详述各软件的安装配置过程，只提供软件的下载链接：</p><p>GeoServer：<a href="http://geoserver.org/download/" target="_blank" rel="noopener">http://geoserver.org/download/</a>                本文版本：2.10.1</p><p>PostgreSQL：<a href="https://www.postgresql.org/download/" target="_blank" rel="noopener">https://www.postgresql.org/download/</a>        本文版本：9.6.2</p><p>PostGIS：<a href="http://postgis.net/windows_downloads/" target="_blank" rel="noopener">http://postgis.net/windows_downloads/</a>            本文版本：2.3</p><p>pgAdmin III：<a href="https://www.pgadmin.org/download/pgadmin-3-windows/" target="_blank" rel="noopener">https://www.pgadmin.org/download/pgadmin-3-windows/</a></p><p>注：pgRouting已经包含在PostGIS安装中,OpenLayers3可以使用CDN引入。另外，在数据制作和处理及导入数据库的过程中我用到的是QGIS<a href="https://www.qgis.org/en/site/" target="_blank" rel="noopener">https://www.qgis.org/en/site/</a>，考虑到大家对软件各有所爱，只要能达到效果，任何其他的GIS软件都可以，大家可以根据自己的情况，选择适合自己的GIS软件或工具，这里就不再做安装选项和详细说明。</p><h3 id="数据制作处理"><a href="#数据制作处理" class="headerlink" title="数据制作处理"></a>数据制作处理</h3><h4 id="数据制作与检查"><a href="#数据制作与检查" class="headerlink" title="数据制作与检查"></a>数据制作与检查</h4><p>使用QGIS或其他GIS软件绘制测试路网数据。地理坐标系使用GCS_WGS_1984，编号为：4326。注意：所有线段连接的地方都需要断开，这样便于以后的分析。做好测试路网数据之后最好做一次拓扑检查，查看数据是否有拓扑问题，如果没有则可进行下一步处理。<br><img src="https://github.com/funcgis/funcgis.github.io/blob/master/2018/01/10/route-analysis/QGIS.png?raw=true" alt="QGIS_Edit"><br><img src="https://github.com/funcgis/funcgis.github.io/blob/master/2018/01/10/route-analysis/QGIS_Check.png?raw=true" alt="QGIS_Check"></p><h4 id="安装数据库扩展"><a href="#安装数据库扩展" class="headerlink" title="安装数据库扩展"></a>安装数据库扩展</h4><p>使用paAdmin3连接PostgreSQL数据库，连接或创建测试数据库，在测试数据库上打开SQL面板，执行以下语句，以在PostgreSQL数据库中添加空间扩展：<br>CREATE EXTENSION postgis;                –创建数据库PostGIS扩展<br>CREATE EXTENSION pgrouting;                –创建数据库pgRouting扩展<br>CREATE EXTENSION postgis_topology;            –创建数据库PostGIS拓扑扩展<br>CREATE EXTENSION fuzzystrmatch;              –字符串相似度计算扩展（配合下面的tiger使用）（本例可不装）<br>CREATE EXTENSION postgis_tiger_geocoder;         –创建数据库地理编码扩展（本例可不装）<br>CREATE EXTENSION address_standardizer;           –创建数据库地址标准化扩展（本例可不装）<br><img src="https://github.com/funcgis/funcgis.github.io/blob/master/2018/01/10/route-analysis/pgAdmin_SQL.png?raw=true" alt="pgAdmin_SQL"></p><h4 id="数据入库"><a href="#数据入库" class="headerlink" title="数据入库"></a>数据入库</h4><p>制作好数据并进行拓扑检查和处理后，再完成数据库空间扩展的安装，就可以将制作好检查好的数据导入PostgreSQL数据库了。这里我依然使用的是QGIS来进行数据入库。首先需要在QGIS中连接测试的PostgreSQL数据库作为数据源之一（左侧面板中选择PostgreSQL，输入参数即可），然后选择QGIS-&gt;DataBase-&gt;DB Manager，在DB Manager弹窗中选择PostGIS数据库选项，如果上一步PostgreSQL连接正确，即可在此处的PostGIS选项下看到已经连接的数据库名称了。选择此数据库下的Public架构，点击工具栏上面的Import按钮，选择当前加载的已经制作好的路网数据并设置好选项，点击OK，提示完成即表示已经导入到数据库。<br><img src="https://github.com/funcgis/funcgis.github.io/blob/master/2018/01/10/route-analysis/QGIS_import.png?raw=true" alt="QGIS_Import"><br><img src="https://github.com/funcgis/funcgis.github.io/blob/master/2018/01/10/route-analysis/QGIS_importdb.png?raw=true" alt="QGIS_ImportToDB"></p><h4 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a>数据处理</h4><p>接下来我们需要对导入到数据库的空间表进行拓扑处理。打开pgAdmin并从测试数据库中打开SQL窗口，一次进行如下操作：</p><h5 id="修改表结构"><a href="#修改表结构" class="headerlink" title="修改表结构"></a>修改表结构</h5><p>–添加起点id<br>ALTER TABLE public.road_new ADD COLUMN source integer;<br>–添加终点id<br>ALTER TABLE public.road_new  ADD COLUMN target integer;<br>–添加道路权重值<br>ALTER TABLE public.road_new  ADD COLUMN length double precision;</p><h5 id="创建拓扑"><a href="#创建拓扑" class="headerlink" title="创建拓扑"></a>创建拓扑</h5><p>–为road_new表创建拓扑布局，即为source和target字段赋值<br>SELECT pgr_createTopology(‘public.road_new’,0.00001, ‘geom’, ‘id’);<br>注：此处的gid可能实际表中为id，因此需要根据数据库中实际表字段给定</p><h5 id="创建索引"><a href="#创建索引" class="headerlink" title="创建索引"></a>创建索引</h5><p>–为source和target字段创建索引<br>CREATE INDEX source_idx ON road_new(“source”);<br>CREATE INDEX target_idx ON road_new(“target”);</p><h5 id="权重字段赋值"><a href="#权重字段赋值" class="headerlink" title="权重字段赋值"></a>权重字段赋值</h5><p>–为length赋值<br>update road_new set length =st_length(geom);<br>–为road_new表添加reverse_cost字段并用length的值赋值<br>ALTER TABLE road_new ADD COLUMN reverse_cost double precision;<br>UPDATE road_new SET reverse_cost =length;</p><h3 id="编写分析函数"><a href="#编写分析函数" class="headerlink" title="编写分析函数"></a>编写分析函数</h3><p>通过以上操作，所有的数据准备工作已经完成，接下来我们需要编写数据库函数，来实现任意两点之间的最短路径计算。打开pgAdmin，在测试数据库中打开SQL查询窗口，开始编写路径分析函数：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">FUNCTION</span> pgr_fromPointtoPoint(tbl <span class="built_in">varchar</span>,startx <span class="built_in">float</span>, starty <span class="built_in">float</span>,endx <span class="built_in">float</span>,endy <span class="built_in">float</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">function</span> pgr_fromPointtoPoint(tbl <span class="built_in">varchar</span>,startx <span class="built_in">float</span>, starty <span class="built_in">float</span>,endx <span class="built_in">float</span>,endy <span class="built_in">float</span>)  </span><br><span class="line"></span><br><span class="line"><span class="keyword">returns</span> geometry <span class="keyword">as</span> </span><br><span class="line"></span><br><span class="line">$<span class="keyword">body</span>$  </span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> </span><br><span class="line"></span><br><span class="line">    v_startLine geometry;<span class="comment">--离起点最近的线 </span></span><br><span class="line"></span><br><span class="line">    v_endLine geometry;<span class="comment">--离终点最近的线 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    v_startTarget integer;<span class="comment">--距离起点最近线的终点</span></span><br><span class="line"></span><br><span class="line">    v_startSource integer;</span><br><span class="line"></span><br><span class="line">    v_endSource integer;<span class="comment">--距离终点最近线的起点</span></span><br><span class="line"></span><br><span class="line">    v_endTarget integer;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    v_statpoint geometry;<span class="comment">--在v_startLine上距离起点最近的点 </span></span><br><span class="line"></span><br><span class="line">    v_endpoint geometry;<span class="comment">--在v_endLine上距离终点最近的点 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    v_res geometry;<span class="comment">--最短路径分析结果</span></span><br><span class="line"></span><br><span class="line">    v_res_a geometry;</span><br><span class="line"></span><br><span class="line">    v_res_b geometry;</span><br><span class="line"></span><br><span class="line">    v_res_c geometry;</span><br><span class="line"></span><br><span class="line">    v_res_d geometry; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    v_perStart float;<span class="comment">--v_statpoint在v_res上的百分比 </span></span><br><span class="line"></span><br><span class="line">    v_perEnd float;<span class="comment">--v_endpoint在v_res上的百分比 </span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">    v_shPath_se geometry;<span class="comment">--开始到结束</span></span><br><span class="line"></span><br><span class="line">    v_shPath_es geometry;<span class="comment">--结束到开始</span></span><br><span class="line"></span><br><span class="line">    v_shPath geometry;<span class="comment">--最终结果</span></span><br><span class="line"></span><br><span class="line">    tempnode float;      </span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">--查询离起点最近的线 </span></span><br><span class="line">    <span class="keyword">execute</span> <span class="string">'select geom, source, target  from '</span> ||tbl||</span><br><span class="line">                            <span class="string">' where ST_DWithin(geom,ST_Geometryfromtext(''point('</span>||         startx ||<span class="string">' '</span> || starty||<span class="string">')'',4326),15)</span></span><br><span class="line"><span class="string">                            order by ST_Distance(geom,ST_GeometryFromText(''point('</span>|| startx ||<span class="string">' '</span>|| starty ||<span class="string">')'',4326))  limit 1'</span></span><br><span class="line">                            <span class="keyword">into</span> v_startLine, v_startSource ,v_startTarget; </span><br><span class="line">     </span><br><span class="line"></span><br><span class="line">    <span class="comment">--查询离终点最近的线 </span></span><br><span class="line">    <span class="keyword">execute</span> <span class="string">'select geom, source, target from '</span> ||tbl||</span><br><span class="line">                            <span class="string">' where ST_DWithin(geom,ST_Geometryfromtext(''point('</span>|| endx || <span class="string">' '</span> || endy ||<span class="string">')'',4326),15)</span></span><br><span class="line"><span class="string">                            order by ST_Distance(geom,ST_GeometryFromText(''point('</span>|| endx ||<span class="string">' '</span> || endy ||<span class="string">')'',4326))  limit 1'</span></span><br><span class="line">                            <span class="keyword">into</span> v_endLine, v_endSource,v_endTarget; </span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">    <span class="comment">--如果没找到最近的线，就返回null </span></span><br><span class="line">    if (v_startLine is null) or (v_endLine is null) then </span><br><span class="line">        return null; </span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">if</span> ; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">select</span>  ST_ClosestPoint(v_startLine, ST_Geometryfromtext(<span class="string">'point('</span>|| startx ||<span class="string">' '</span> || starty ||<span class="string">')'</span>,<span class="number">4326</span>)) <span class="keyword">into</span> v_statpoint; </span><br><span class="line">    <span class="keyword">select</span>  ST_ClosestPoint(v_endLine, ST_GeometryFromText(<span class="string">'point('</span>|| endx ||<span class="string">' '</span> || endy ||<span class="string">')'</span>,<span class="number">4326</span>)) <span class="keyword">into</span> v_endpoint;    </span><br><span class="line"></span><br><span class="line">   <span class="comment">-- ST_Distance </span></span><br><span class="line">     </span><br><span class="line"></span><br><span class="line">    <span class="comment">--从开始的起点到结束的起点最短路径 </span></span><br><span class="line">    <span class="keyword">execute</span> <span class="string">'SELECT st_linemerge(st_union(b.geom)) '</span> ||</span><br><span class="line">    <span class="string">'FROM pgr_kdijkstraPath( </span></span><br><span class="line"><span class="string">    ''SELECT id as id, source, target, length as cost FROM '</span> || tbl ||<span class="string">''','</span> </span><br><span class="line">    ||v_startSource || <span class="string">', '</span> ||<span class="string">'array['</span>||v_endSource||<span class="string">'] , false, false </span></span><br><span class="line"><span class="string">    ) a, '</span> </span><br><span class="line">    || tbl || <span class="string">' b </span></span><br><span class="line"><span class="string">    WHERE a.id3=b.id   </span></span><br><span class="line"><span class="string">    GROUP by id1   </span></span><br><span class="line"><span class="string">    ORDER by id1'</span> <span class="keyword">into</span> v_res ;</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">    <span class="comment">--从开始的终点到结束的起点最短路径</span></span><br><span class="line">    <span class="keyword">execute</span> <span class="string">'SELECT st_linemerge(st_union(b.geom)) '</span> ||</span><br><span class="line">    <span class="string">'FROM pgr_kdijkstraPath( </span></span><br><span class="line"><span class="string">    ''SELECT id as id, source, target, length as cost FROM '</span> || tbl ||<span class="string">''','</span> </span><br><span class="line">    ||v_startTarget || <span class="string">', '</span> ||<span class="string">'array['</span>||v_endSource||<span class="string">'] , false, false </span></span><br><span class="line"><span class="string">    ) a, '</span> </span><br><span class="line">    || tbl || <span class="string">' b </span></span><br><span class="line"><span class="string">    WHERE a.id3=b.id   </span></span><br><span class="line"><span class="string">    GROUP by id1   </span></span><br><span class="line"><span class="string">    ORDER by id1'</span> <span class="keyword">into</span> v_res_b ;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">    <span class="comment">--从开始的起点到结束的终点最短路径</span></span><br><span class="line">    <span class="keyword">execute</span> <span class="string">'SELECT st_linemerge(st_union(b.geom)) '</span> ||</span><br><span class="line">    <span class="string">'FROM pgr_kdijkstraPath( </span></span><br><span class="line"><span class="string">    ''SELECT id as id, source, target, length as cost FROM '</span> || tbl ||<span class="string">''','</span> </span><br><span class="line">    ||v_startSource || <span class="string">', '</span> ||<span class="string">'array['</span>||v_endTarget||<span class="string">'] , false, false </span></span><br><span class="line"><span class="string">    ) a, '</span> </span><br><span class="line">    || tbl || <span class="string">' b </span></span><br><span class="line"><span class="string">    WHERE a.id3=b.id   </span></span><br><span class="line"><span class="string">    GROUP by id1   </span></span><br><span class="line"><span class="string">    ORDER by id1'</span> <span class="keyword">into</span> v_res_c ;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">    <span class="comment">--从开始的终点到结束的终点最短路径</span></span><br><span class="line">    <span class="keyword">execute</span> <span class="string">'SELECT st_linemerge(st_union(b.geom)) '</span> ||</span><br><span class="line">    <span class="string">'FROM pgr_kdijkstraPath( </span></span><br><span class="line"><span class="string">    ''SELECT id as id, source, target, length as cost FROM '</span> || tbl ||<span class="string">''','</span> </span><br><span class="line">    ||v_startTarget || <span class="string">', '</span> ||<span class="string">'array['</span>||v_endTarget||<span class="string">'] , false, false </span></span><br><span class="line"><span class="string">    ) a, '</span> </span><br><span class="line">    || tbl || <span class="string">' b </span></span><br><span class="line"><span class="string">    WHERE a.id3=b.id   </span></span><br><span class="line"><span class="string">    GROUP by id1   </span></span><br><span class="line"><span class="string">    ORDER by id1'</span> <span class="keyword">into</span> v_res_d ;</span><br><span class="line"></span><br><span class="line">    if(ST_Length(v_res) &gt; ST_Length(v_res_b)) then</span><br><span class="line">       v_res = v_res_b;</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">if</span>;</span><br><span class="line"></span><br><span class="line">    if(ST_Length(v_res) &gt; ST_Length(v_res_c)) then</span><br><span class="line">       v_res = v_res_c;</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">if</span>;</span><br><span class="line"></span><br><span class="line">    if(ST_Length(v_res) &gt; ST_Length(v_res_d)) then</span><br><span class="line">       v_res = v_res_d;</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">if</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">--如果找不到最短路径，就返回null </span></span><br><span class="line">    <span class="comment">--if(v_res is null) then </span></span><br><span class="line">    <span class="comment">--    return null; </span></span><br><span class="line">    <span class="comment">--end if; </span></span><br><span class="line"></span><br><span class="line">    <span class="comment">--将v_res,v_startLine,v_endLine进行拼接 </span></span><br><span class="line">    <span class="keyword">select</span>  st_linemerge(ST_Union(<span class="built_in">array</span>[v_res,v_startLine,v_endLine])) <span class="keyword">into</span> v_res;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">select</span>  ST_Line_Locate_Point(v_res, v_statpoint) <span class="keyword">into</span> v_perStart; </span><br><span class="line">    <span class="keyword">select</span>  ST_Line_Locate_Point(v_res, v_endpoint) <span class="keyword">into</span> v_perEnd;         </span><br><span class="line"></span><br><span class="line">    if(v_perStart &gt; v_perEnd) then </span><br><span class="line">        tempnode =  v_perStart;</span><br><span class="line">        v_perStart = v_perEnd;</span><br><span class="line">        v_perEnd = tempnode;</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">if</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">--截取v_res </span></span><br><span class="line">    <span class="keyword">SELECT</span> ST_Line_SubString(v_res,v_perStart, v_perEnd) <span class="keyword">into</span> v_shPath;</span><br><span class="line"></span><br><span class="line">    return v_shPath; </span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span>; </span><br><span class="line"></span><br><span class="line">$body$ </span><br><span class="line"></span><br><span class="line">LANGUAGE plpgsql VOLATILE STRICT;</span><br></pre></td></tr></table></figure><h3 id="slqView服务发布"><a href="#slqView服务发布" class="headerlink" title="slqView服务发布"></a>slqView服务发布</h3><p>完成以上步骤后，通过Geoserver SQLView方式发布路网分析服务，过程如下：</p><h4 id="新建工作空间"><a href="#新建工作空间" class="headerlink" title="新建工作空间"></a>新建工作空间</h4><p><img src="https://github.com/funcgis/funcgis.github.io/blob/master/2018/01/10/route-analysis/Add_WP.png?raw=true" alt="Add_WP"></p><h4 id="创建数据存储"><a href="#创建数据存储" class="headerlink" title="创建数据存储"></a>创建数据存储</h4><p><img src="https://github.com/funcgis/funcgis.github.io/blob/master/2018/01/10/route-analysis/Add_DS.png?raw=true" alt="Add_DB"><br><img src="https://github.com/funcgis/funcgis.github.io/blob/master/2018/01/10/route-analysis/Add_DSX.png?raw=true" alt="Add_DBX"></p><h4 id="新建SQLView图层"><a href="#新建SQLView图层" class="headerlink" title="新建SQLView图层"></a>新建SQLView图层</h4><p><img src="https://github.com/funcgis/funcgis.github.io/blob/master/2018/01/10/route-analysis/Add_Layer.png?raw=true" alt="Add_Layer"><br><img src="https://github.com/funcgis/funcgis.github.io/blob/master/2018/01/10/route-analysis/Add_SQL.png?raw=true" alt="Add_SQL"><br><img src="https://github.com/funcgis/funcgis.github.io/blob/master/2018/01/10/route-analysis/Add_SQLX.png?raw=true" alt="Add_SQX"></p><h3 id="前端结果展示"><a href="#前端结果展示" class="headerlink" title="前端结果展示"></a>前端结果展示</h3><p>前端展示代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>路径分析<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./css/ol.css"</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./js/ol.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        #map:focus &#123;</span></span><br><span class="line"><span class="undefined">            outline: #4A74A8 solid 0.15em;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"height: 50px;margin-top: 0px;margin-left: 0px"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"margin-top: 20px"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"startPoint"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"endPoint"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"float: right;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"startNavigation()"</span>&gt;</span>任意路径规划<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"clearResult()"</span>&gt;</span>清除路径规划<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"map"</span> <span class="attr">class</span>=<span class="string">"map"</span> <span class="attr">tabindex</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    //初始化功能参数</span></span><br><span class="line"><span class="undefined">    var params = &#123;</span></span><br><span class="line"><span class="undefined">        LAYERS: 'test:routeway',</span></span><br><span class="line"><span class="undefined">        FORMAT: 'image/png'</span></span><br><span class="line"><span class="undefined">    &#125;;</span></span><br><span class="line"><span class="undefined">    var routeLayer = null;</span></span><br><span class="line"><span class="undefined">    var navigateLayer = null;</span></span><br><span class="line"><span class="undefined">    var startPoint;</span></span><br><span class="line"><span class="undefined">    var destPoint;</span></span><br><span class="line"><span class="undefined">    var vectorLayer;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    //初始化地图和底图</span></span><br><span class="line"><span class="undefined">    var map = new ol.Map(&#123;</span></span><br><span class="line"><span class="undefined">        layers: [</span></span><br><span class="line"><span class="undefined">            new ol.layer.Tile(&#123;</span></span><br><span class="line"><span class="undefined">                source: new ol.source.OSM()</span></span><br><span class="line"><span class="undefined">            &#125;)</span></span><br><span class="line"><span class="undefined">        ],</span></span><br><span class="line"><span class="undefined">        target: 'map',</span></span><br><span class="line"><span class="undefined">        controls: ol.control.defaults(&#123;</span></span><br><span class="line"><span class="undefined">            attributionOptions: &#123;</span></span><br><span class="line"><span class="undefined">                collapsible: false</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;),</span></span><br><span class="line"><span class="undefined">        view: new ol.View(&#123;</span></span><br><span class="line"><span class="undefined">            projection: 'EPSG:4326',</span></span><br><span class="line"><span class="undefined">            center: [lontitude,latitude],</span></span><br><span class="line"><span class="undefined">            zoom: 15</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    //添加路网基础服务</span></span><br><span class="line"><span class="undefined">    var roadLayer = new ol.layer.Tile(&#123;</span></span><br><span class="line"><span class="undefined">        source: new ol.source.TileWMS(&#123;</span></span><br><span class="line"><span class="undefined">        url: 'http://localhost:8097/geoserver/yc/wms',</span></span><br><span class="line"><span class="undefined">        params: &#123;'LAYERS': 'test:road', 'TILED': true&#125;,</span></span><br><span class="line"><span class="undefined">            serverType: 'geoserver'</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="undefined">    map.addLayer(roadLayer);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    function startNavigation() &#123;</span></span><br><span class="line"><span class="undefined">        clearResult();</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        startPoint = new ol.Feature();</span></span><br><span class="line"><span class="undefined">        destPoint = new ol.Feature();</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        vectorLayer = new ol.layer.Vector(&#123;</span></span><br><span class="line"><span class="undefined">            source: new ol.source.Vector(&#123;</span></span><br><span class="line"><span class="undefined">                features: [startPoint, destPoint]</span></span><br><span class="line"><span class="undefined">            &#125;),</span></span><br><span class="line"><span class="undefined">            style:new ol.style.Style(&#123;</span></span><br><span class="line"><span class="undefined">                image:new ol.style.Icon((&#123;</span></span><br><span class="line"><span class="undefined">                    size:[24,36],</span></span><br><span class="line"><span class="undefined">                    anchor:[0.5,0.75],</span></span><br><span class="line"><span class="undefined">                    anchorXUnits:'fraction',</span></span><br><span class="line"><span class="undefined">                    anchorYUnits:'fraction',</span></span><br><span class="line"><span class="undefined">                    src:'./img/marker.png'</span></span><br><span class="line"><span class="undefined">                &#125;))</span></span><br><span class="line"><span class="undefined">            &#125;)</span></span><br><span class="line"><span class="undefined">        &#125;);</span></span><br><span class="line"><span class="undefined">        map.addLayer(vectorLayer);</span></span><br><span class="line"><span class="undefined">        map.on('click', clickMap);</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    function initClearButtion(type) &#123;</span></span><br><span class="line"><span class="undefined">        var clearButton = document.getElementById('clear');</span></span><br><span class="line"><span class="undefined">        clearButton.addEventListener('click', function(event) &#123;</span></span><br><span class="line"><span class="undefined">            clearResult(type);</span></span><br><span class="line"><span class="undefined">        &#125;);</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    function clearResult(type) &#123;</span></span><br><span class="line"><span class="undefined">        clearNavigateLayer();</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    function clearNavigateLayer() &#123;</span></span><br><span class="line"><span class="undefined">        if(navigateLayer)&#123;</span></span><br><span class="line"><span class="undefined">            startPoint.setGeometry(null);</span></span><br><span class="line"><span class="undefined">            destPoint.setGeometry(null);</span></span><br><span class="line"><span class="undefined">            map.removeLayer(vectorLayer);</span></span><br><span class="line"><span class="undefined">            map.removeLayer(navigateLayer);</span></span><br><span class="line"><span class="undefined">            navigateLayer = null;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">    function clickMap(event) &#123;</span></span><br><span class="line"><span class="undefined">        if (startPoint.getGeometry() == null &amp;&amp; destPoint.getGeometry() == null) &#123;</span></span><br><span class="line"><span class="undefined">            // First click.</span></span><br><span class="line"><span class="undefined">            startPoint.setGeometry(new ol.geom.Point(event.coordinate));</span></span><br><span class="line"><span class="undefined">        &#125;else if (startPoint.getGeometry() != null &amp;&amp; destPoint.getGeometry() == null) &#123;</span></span><br><span class="line"><span class="undefined">            // Second click.</span></span><br><span class="line"><span class="undefined">            destPoint.setGeometry(new ol.geom.Point(event.coordinate));</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">            var startCoord = (startPoint.getGeometry().getCoordinates());</span></span><br><span class="line"><span class="undefined">            var destCoord = (destPoint.getGeometry().getCoordinates());</span></span><br><span class="line"><span class="undefined">            console.log(startCoord,destCoord);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">            navigateLayer = new ol.layer.Tile(&#123;</span></span><br><span class="line"><span class="undefined">                source: new ol.source.TileWMS(&#123;</span></span><br><span class="line"><span class="undefined">                    url: 'http://localhost:8097/geoserver/test/wms',</span></span><br><span class="line"><span class="undefined">                    params: &#123;'LAYERS': 'test:routeway', 'TILED': true,'viewparams':'sx:'+startCoord[0]+';sy:'+startCoord[1]+';ex:'+destCoord[0]+';ey:'+destCoord[1]&#125;,</span></span><br><span class="line"><span class="undefined">                    serverType: 'geoserver'</span></span><br><span class="line"><span class="undefined">                &#125;)</span></span><br><span class="line"><span class="undefined">            &#125;);</span></span><br><span class="line"><span class="undefined">            console.log(navigateLayer);</span></span><br><span class="line"><span class="undefined">            map.addLayer(navigateLayer);</span></span><br><span class="line"><span class="undefined">            map.un('click', clickMap);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    </span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>前端展示效果<br><img src="https://github.com/funcgis/funcgis.github.io/blob/master/2018/01/10/route-analysis/ViewResult.png?raw=true" alt="ViewResult"></p>]]></content>
    
    <summary type="html">
    
      如何在不编写后台代码的情况下，实现高效的最短路径分析。PostgreSQL+PostGIS+pgRouting+GeoServer+OpenLayers3
    
    </summary>
    
      <category term="GIS" scheme="http://www.xfunsoft.xyz/categories/GIS/"/>
    
    
      <category term="路径分析" scheme="http://www.xfunsoft.xyz/tags/%E8%B7%AF%E5%BE%84%E5%88%86%E6%9E%90/"/>
    
      <category term="最短路径分析" scheme="http://www.xfunsoft.xyz/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E5%88%86%E6%9E%90/"/>
    
      <category term="GeoServer" scheme="http://www.xfunsoft.xyz/tags/GeoServer/"/>
    
      <category term="PostgreSQL" scheme="http://www.xfunsoft.xyz/tags/PostgreSQL/"/>
    
      <category term="PostGIS" scheme="http://www.xfunsoft.xyz/tags/PostGIS/"/>
    
      <category term="pgRouting" scheme="http://www.xfunsoft.xyz/tags/pgRouting/"/>
    
      <category term="OpenLayers3" scheme="http://www.xfunsoft.xyz/tags/OpenLayers3/"/>
    
  </entry>
  
</feed>
